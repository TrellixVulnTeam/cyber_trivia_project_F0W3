[{"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\index.js":"1","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\registerServiceWorker.js":"2","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\App.js":"3","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\index.js":"4","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Navigation.js":"5","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\App\\App.js":"7","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\App\\mainPageImage.js":"8","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\GameList\\GameList.js":"9","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\Api Connection\\serverConnection.js":"10","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\Game Search Bar\\searchBar.js":"11","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\Game\\Game.js":"12","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\betterSignUp\\index.js":"13","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\betterSignUp\\login.js":"14","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\betterSignUp\\register.js":"15"},{"size":260,"mtime":1619093654543,"results":"16","hashOfConfig":"17"},{"size":2153,"mtime":1497473090000,"results":"18","hashOfConfig":"17"},{"size":1152,"mtime":1619103498429,"results":"19","hashOfConfig":"17"},{"size":231,"mtime":1619101578158,"results":"20","hashOfConfig":"17"},{"size":2065,"mtime":1619101168476,"results":"21","hashOfConfig":"17"},{"size":453,"mtime":1619030138862,"results":"22","hashOfConfig":"17"},{"size":998,"mtime":1619116715444,"results":"23","hashOfConfig":"17"},{"size":582,"mtime":1619024766943,"results":"24","hashOfConfig":"17"},{"size":454,"mtime":1619019567878,"results":"25","hashOfConfig":"17"},{"size":6042,"mtime":1619177310631,"results":"26","hashOfConfig":"17"},{"size":1031,"mtime":1618935573389,"results":"27","hashOfConfig":"17"},{"size":456,"mtime":1619025069352,"results":"28","hashOfConfig":"17"},{"size":117,"mtime":1619101578170,"results":"29","hashOfConfig":"17"},{"size":2120,"mtime":1619115300179,"results":"30","hashOfConfig":"17"},{"size":3108,"mtime":1619117653900,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1dtapi1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\index.js",[],["66","67"],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\registerServiceWorker.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\App.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\index.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Navigation.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\App\\App.js",["68","69","70"],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\App\\mainPageImage.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\GameList\\GameList.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\Api Connection\\serverConnection.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\Game Search Bar\\searchBar.js",["71"],"import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gameName: ''\r\n        }\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleGameNameChange = this.handleGameNameChange.bind(this);\r\n    }\r\n\r\n    handleGameNameChange(event) {\r\n        this.setState({gameName: event.target.value});\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchAPI(this.state.gameName);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className='SearchBar-fields'>\r\n                    <input placeholder=\"Search Games\" onChange={this.handleGameNameChange}/>\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Search</a>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\Main Page\\Game\\Game.js",["72"],"import React from 'react';\r\nimport './Game.css';\r\nimport triviaphoto from './istockphoto-973102672-170667a.jpg'\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Game\">\r\n                <div className=\"image-container\">\r\n                    <img src={triviaphoto} alt='ai photo'/>\r\n                </div>\r\n                <h2>{this.props.game}</h2>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Game;","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\betterSignUp\\index.js",[],"C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\betterSignUp\\login.js",["73"],"import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./login.css\";\r\n\r\nclass Login extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {username: '',\r\n        password: ''}\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.setUsername = this.setUsername.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n    }\r\n\r\n\r\n     validateForm() {\r\n        return this.state.username.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    setUsername(newUsername) {\r\n        this.setState({username: newUsername})\r\n    }\r\n\r\n    setPassword(newPassword) {\r\n        this.setState({password: newPassword})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group size=\"lg\" controlId=\"email\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            value={this.username}\r\n                            onChange={(e) => this.setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"lg\" controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={this.password}\r\n                            onChange={(e) => this.setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button block size=\"lg\" type=\"submit\" disabled={!this.validateForm()}>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\coolermaster\\PycharmProjects\\Updated_trivia_project\\frontend\\src\\components\\betterSignUp\\register.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":34,"column":15,"nodeType":"85","endLine":34,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":31,"column":21,"nodeType":"85","endLine":31,"endColumn":52},{"ruleId":"88","severity":1,"message":"89","line":10,"column":21,"nodeType":"85","endLine":10,"endColumn":60},{"ruleId":"78","severity":1,"message":"90","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'GameList' is defined but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]