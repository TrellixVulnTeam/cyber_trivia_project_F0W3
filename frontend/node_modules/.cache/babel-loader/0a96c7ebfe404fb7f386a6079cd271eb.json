{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolermaster\\\\PycharmProjects\\\\Updated_trivia_project\\\\frontend\\\\src\\\\components\\\\Sign Up\\\\register.js\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./login.css\";\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\nimport HomeButton from './returnToHomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      userCreated: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n    this.serverRegister = this.serverRegister.bind(this);\n    this.setUserCreated = this.setUserCreated.bind(this);\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  setUsername(newUsername) {\n    this.setState({\n      username: newUsername\n    });\n  }\n\n  setPassword(newPassword) {\n    this.setState({\n      password: newPassword\n    });\n  }\n\n  setUserCreated() {\n    if (!this.state.userCreated) {\n      this.setState({\n        userCreated: true\n      });\n    }\n  }\n\n  async serverRegister() {\n    let response = await ServerConnection.register(this.state.username, this.state.password).then(result => result);\n\n    if (response === \"User created successfully.\") {\n      this.setUserCreated();\n      let token = await ServerConnection.auth(this.state.username, this.state.password).then(authResponse => authResponse);\n\n      if (token) {\n        this.props.setToken(token);\n        this.props.setUser(this.state.username);\n        alert(\"You are signed upp.\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"text\",\n            value: this.username,\n            onChange: e => this.setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: this.password,\n            onChange: e => this.setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: this.password,\n            onChange: e => this.setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          disabled: !this.validateForm(),\n          onClick: this.serverRegister,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Sign Up/register.js"],"names":["React","Form","Button","ServerConnection","HomeButton","Register","Component","constructor","props","state","username","password","userCreated","handleSubmit","bind","validateForm","setUsername","setPassword","serverRegister","setUserCreated","length","event","preventDefault","newUsername","setState","newPassword","response","register","then","result","token","auth","authResponse","setToken","setUser","alert","render","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./login.css\";\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\nimport HomeButton from './returnToHomePage';\r\n\r\n\r\n\r\n\r\n\r\nclass Register extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            userCreated: false\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.setUsername = this.setUsername.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n        this.serverRegister = this.serverRegister.bind(this);\r\n        this.setUserCreated = this.setUserCreated.bind(this);\r\n    }\r\n\r\n\r\n    validateForm() {\r\n        return this.state.username.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    setUsername(newUsername) {\r\n        this.setState({username: newUsername})\r\n    }\r\n\r\n    setPassword(newPassword) {\r\n        this.setState({password: newPassword})\r\n    }\r\n\r\n    setUserCreated() {\r\n        if (!this.state.userCreated) {\r\n            this.setState({userCreated: true})\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async serverRegister() {\r\n        let response = await ServerConnection.register(this.state.username, this.state.password).then((result) =>result);\r\n        if (response === \"User created successfully.\") {\r\n            this.setUserCreated();\r\n            let token = await ServerConnection.auth(this.state.username, this.state.password).then((authResponse) =>authResponse);\r\n            if (token){\r\n                this.props.setToken(token);\r\n                this.props.setUser(this.state.username)\r\n                alert(\"You are signed upp.\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group size=\"lg\" controlId=\"email\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            value={this.username}\r\n                            onChange={(e) => this.setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"lg\" controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={this.password}\r\n                            onChange={(e) => this.setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"lg\" controlId=\"password\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={this.password}\r\n                            onChange={(e) => this.setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button block size=\"lg\" type=\"submit\" disabled={!this.validateForm()} onClick={this.serverRegister}>\r\n                        Sign Up\r\n                    </Button>\r\n                    <HomeButton/>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}