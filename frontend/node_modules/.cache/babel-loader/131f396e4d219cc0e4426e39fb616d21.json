{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolermaster\\\\PycharmProjects\\\\Updated_trivia_project\\\\frontend\\\\src\\\\components\\\\betterSignUp\\\\login.js\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./login.css\";\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.username = '';\n    this.password = '';\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n  }\n\n  validateForm() {\n    return this.username.length > 0 && this.password.length > 0;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  setUsername(newUsername) {\n    this.username = newUsername;\n  }\n\n  setPassword(newPassword) {\n    this.password = newPassword;\n  }\n\n  authenticate() {\n    const token = ServerConnection.auth(this.username, this.password);\n\n    if (token) {\n      this.props.setToken(token);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"text\",\n            value: this.username,\n            onChange: e => this.setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: this.password,\n            onChange: e => this.setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          size: \"lg\",\n          type: \"submit\",\n          disabled: !this.validateForm(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/betterSignUp/login.js"],"names":["React","Form","Button","ServerConnection","Login","Component","constructor","props","username","password","handleSubmit","bind","validateForm","setUsername","setPassword","length","event","preventDefault","newUsername","newPassword","authenticate","token","auth","setToken","render","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAOA,KAAP;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAGAC,EAAAA,YAAY,GAAG;AACZ,WAAO,KAAKJ,QAAL,CAAcO,MAAd,GAAuB,CAAvB,IAA4B,KAAKN,QAAL,CAAcM,MAAd,GAAuB,CAA1D;AACH;;AAEDL,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACH;;AAEDJ,EAAAA,WAAW,CAACK,WAAD,EAAc;AACrB,SAAKV,QAAL,GAAgBU,WAAhB;AACH;;AAEDJ,EAAAA,WAAW,CAACK,WAAD,EAAc;AACrB,SAAKV,QAAL,GAAgBU,WAAhB;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,UAAMC,KAAK,GAAGlB,gBAAgB,CAACmB,IAAjB,CAAsB,KAAKd,QAA3B,EAAqC,KAAKC,QAA1C,CAAd;;AACA,QAAIY,KAAJ,EAAU;AACN,WAAKd,KAAL,CAAWgB,QAAX,CAAoBF,KAApB;AACH;AAEJ;;AAGDG,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKd,YAArB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAsB,UAAA,SAAS,EAAC,OAAhC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,SAAS,MADb;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,KAAK,EAAE,KAAKF,QAHhB;AAII,YAAA,QAAQ,EAAGiB,CAAD,IAAO,KAAKZ,WAAL,CAAiBY,CAAC,CAACC,MAAF,CAASC,KAA1B;AAJrB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAsB,UAAA,SAAS,EAAC,UAAhC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,KAAK,EAAE,KAAKlB,QAFhB;AAGI,YAAA,QAAQ,EAAGgB,CAAD,IAAO,KAAKX,WAAL,CAAiBW,CAAC,CAACC,MAAF,CAASC,KAA1B;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAkBI,QAAC,MAAD;AAAQ,UAAA,KAAK,MAAb;AAAc,UAAA,IAAI,EAAC,IAAnB;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAsC,UAAA,QAAQ,EAAE,CAAC,KAAKf,YAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AAjE8B;;AAoEnC,eAAeR,KAAf","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./login.css\";\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\n\r\nclass Login extends React.Component{\r\n    constructor(props) {\r\n        super (props);\r\n        this.username = ''\r\n        this.password = ''\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n        this.setUsername = this.setUsername.bind(this);\r\n        this.setPassword = this.setPassword.bind(this);\r\n    }\r\n\r\n\r\n     validateForm() {\r\n        return this.username.length > 0 && this.password.length > 0;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    setUsername(newUsername) {\r\n        this.username = newUsername;\r\n    }\r\n\r\n    setPassword(newPassword) {\r\n        this.password = newPassword;\r\n    }\r\n\r\n    authenticate() {\r\n        const token = ServerConnection.auth(this.username, this.password);\r\n        if (token){\r\n            this.props.setToken(token);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group size=\"lg\" controlId=\"email\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            value={this.username}\r\n                            onChange={(e) => this.setUsername(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group size=\"lg\" controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={this.password}\r\n                            onChange={(e) => this.setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button block size=\"lg\" type=\"submit\" disabled={!this.validateForm()}>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}