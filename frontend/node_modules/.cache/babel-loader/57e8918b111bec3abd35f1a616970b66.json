{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import BuildQuestion from\"./buildQuestion\";import QuizIntro from'./QuizIntro';import Button from\"react-bootstrap/Button\";import ServerConnection from\"../Main Page/Api Connection/serverConnection\";import'./buildQuiz.css';import ToQuizEndPage from\"./toQuizEndPage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BuildQuiz=/*#__PURE__*/function(_React$Component){_inherits(BuildQuiz,_React$Component);var _super=_createSuper(BuildQuiz);function BuildQuiz(props){var _this;_classCallCheck(this,BuildQuiz);_this=_super.call(this,props);_this.user=_this.props.user;_this.state={questionsObj:{},quizName:'',questionAmount:'',counter:1};_this.addQuestionObj=_this.addQuestionObj.bind(_assertThisInitialized(_this));_this.checkQuizIntro=_this.checkQuizIntro.bind(_assertThisInitialized(_this));_this.checkQuestionAmount=_this.checkQuestionAmount.bind(_assertThisInitialized(_this));_this.setQuestionAmount=_this.setQuestionAmount.bind(_assertThisInitialized(_this));_this.setQuizName=_this.setQuizName.bind(_assertThisInitialized(_this));_this.incrementCounter=_this.incrementCounter.bind(_assertThisInitialized(_this));_this.sendQuizObj=_this.sendQuizObj.bind(_assertThisInitialized(_this));_this.wholeQuizObj={};return _this;}_createClass(BuildQuiz,[{key:\"addQuestionObj\",value:function addQuestionObj(questionObj){var objKey=Object.keys(questionObj);var objValue=Object.values(questionObj);this.setState({questionsObj:_objectSpread(_objectSpread({},this.state.questionsObj),{},_defineProperty({},objKey,objValue[0]))});}},{key:\"checkQuizIntro\",value:function checkQuizIntro(){return this.state.quizName.length===0&&this.state.questionAmount.length===0;}},{key:\"setQuizName\",value:function setQuizName(quizName){this.setState({quizName:quizName});}},{key:\"setQuestionAmount\",value:function setQuestionAmount(questionAmount){this.setState({questionAmount:questionAmount});}},{key:\"checkQuestionAmount\",value:function checkQuestionAmount(){return parseInt(this.state.questionAmount)>Object.keys(this.state.questionsObj).length;}},{key:\"sendQuizObj\",value:function(){var _sendQuizObj=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ServerConnection.postQuiz(this.state.quizName,this.user,this.state.questionsObj).then(function(response){return response;});case 2:response=_context.sent;alert(response);case 4:case\"end\":return _context.stop();}}},_callee,this);}));function sendQuizObj(){return _sendQuizObj.apply(this,arguments);}return sendQuizObj;}()},{key:\"incrementCounter\",value:function incrementCounter(){var counter=this.state.counter;this.setState({counter:counter++});}// getSnapshotBeforeUpdate(prevProps, prevState) {\n//     this.setState({prevState});\n// }\n//\n// componentDidUpdate() {\n//     return true;\n// }\n},{key:\"render\",value:function render(){var runQuizintro;if(this.checkQuizIntro()){runQuizintro=/*#__PURE__*/_jsx(QuizIntro,{setQuizName:this.setQuizName,setQuestionAmount:this.setQuestionAmount});}else{runQuizintro=null;}var buildQuestion;if(!this.checkQuizIntro()&&this.checkQuestionAmount()){buildQuestion=/*#__PURE__*/_jsx(BuildQuestion,{addQuestionObj:this.addQuestionObj,questionNumber:Object.keys(this.state.questionsObj).length+1,incrementCounter:this.incrementCounter});}else{buildQuestion=null;}var submitButton;if(!this.checkQuestionAmount()&&!this.checkQuizIntro()){submitButton=/*#__PURE__*/_jsx(ToQuizEndPage,{quizName:this.state.quizName,user:this.user,questionsObj:this.state.questionsObj});}else{submitButton=null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"Quiz\",children:[runQuizintro,buildQuestion,submitButton]});}}]);return BuildQuiz;}(React.Component);export default BuildQuiz;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Make Quiz/BuildQuiz.js"],"names":["React","BuildQuestion","QuizIntro","Button","ServerConnection","ToQuizEndPage","BuildQuiz","props","user","state","questionsObj","quizName","questionAmount","counter","addQuestionObj","bind","checkQuizIntro","checkQuestionAmount","setQuestionAmount","setQuizName","incrementCounter","sendQuizObj","wholeQuizObj","questionObj","objKey","Object","keys","objValue","values","setState","length","parseInt","postQuiz","then","response","alert","runQuizintro","buildQuestion","submitButton","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BuildQuestion from \"./buildQuestion\";\r\nimport QuizIntro from './QuizIntro';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\nimport './buildQuiz.css'\r\nimport ToQuizEndPage from \"./toQuizEndPage\";\r\n\r\n\r\nclass BuildQuiz extends React.Component {\r\n    constructor(props){\r\n        super (props);\r\n        this.user = this.props.user;\r\n        this.state = {\r\n            questionsObj: {},\r\n            quizName: '',\r\n            questionAmount: '',\r\n            counter: 1}\r\n        this.addQuestionObj = this.addQuestionObj.bind(this);\r\n        this.checkQuizIntro = this.checkQuizIntro.bind(this);\r\n        this.checkQuestionAmount = this.checkQuestionAmount.bind(this);\r\n        this.setQuestionAmount = this.setQuestionAmount.bind(this);\r\n        this.setQuizName = this.setQuizName.bind(this);\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.sendQuizObj = this.sendQuizObj.bind(this);\r\n\r\n        this.wholeQuizObj={}\r\n    }\r\n\r\n    addQuestionObj(questionObj) {\r\n        let objKey = Object.keys(questionObj)\r\n        let objValue = Object.values(questionObj)\r\n        this.setState(({\r\n            questionsObj: { ...this.state.questionsObj, [objKey]: objValue[0]}\r\n        }))}\r\n\r\n    checkQuizIntro() {\r\n        return (this.state.quizName.length === 0 && this.state.questionAmount.length === 0);\r\n\r\n    }\r\n\r\n    setQuizName(quizName) {\r\n        this.setState({quizName: quizName})\r\n\r\n    }\r\n\r\n    setQuestionAmount(questionAmount) {\r\n        this.setState({questionAmount: questionAmount})\r\n    }\r\n\r\n\r\n    checkQuestionAmount() {\r\n        return parseInt(this.state.questionAmount) > Object.keys(this.state.questionsObj).length;\r\n    }\r\n\r\n    async sendQuizObj() {\r\n        const response = await ServerConnection.postQuiz(this.state.quizName, this.user, this.state.questionsObj).then(response => response)\r\n        alert(response)\r\n\r\n    }\r\n\r\n    incrementCounter() {\r\n        let counter = this.state.counter;\r\n        this.setState({counter: counter++})\r\n    }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     this.setState({prevState});\r\n    // }\r\n    //\r\n    // componentDidUpdate() {\r\n    //     return true;\r\n    // }\r\n\r\n    render() {\r\n        let runQuizintro;\r\n        if (this.checkQuizIntro()) {\r\n            runQuizintro = <QuizIntro setQuizName={this.setQuizName} setQuestionAmount={this.setQuestionAmount}/>\r\n        } else {\r\n            runQuizintro = null;\r\n\r\n        }\r\n\r\n        let buildQuestion;\r\n        if (!this.checkQuizIntro() && this.checkQuestionAmount()) {\r\n            buildQuestion = <BuildQuestion\r\n                addQuestionObj={this.addQuestionObj}\r\n                questionNumber={Object.keys(this.state.questionsObj).length + 1}\r\n                incrementCounter={this.incrementCounter}/>\r\n        } else {\r\n            buildQuestion = null;\r\n        }\r\n\r\n        let submitButton;\r\n        if (!this.checkQuestionAmount() && !this.checkQuizIntro()) {\r\n            submitButton = <ToQuizEndPage quizName={this.state.quizName} user={this.user} questionsObj={this.state.questionsObj}/>;\r\n        } else {\r\n            submitButton = null;\r\n        }\r\n\r\n        return(<div className=\"Quiz\">\r\n            {runQuizintro}\r\n            {buildQuestion}\r\n            {submitButton}\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default BuildQuiz;"]},"metadata":{},"sourceType":"module"}