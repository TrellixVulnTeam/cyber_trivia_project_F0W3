{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolermaster\\\\PycharmProjects\\\\Updated_trivia_project\\\\frontend\\\\src\\\\components\\\\Do Quiz\\\\DoQuiz.js\";\nimport React from 'react';\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\nimport DoQuestion from \"./DoQuestion\";\nimport Button from \"react-bootstrap/Button\";\nimport HomeButton from \"../Sign Up/returnToHomePage\";\nimport './DoQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DoQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionList: [],\n      userAnswers: []\n    };\n    this.getQuiz = this.getQuiz.bind(this);\n    this.getScore = this.getScore.bind(this);\n    this.setQuestionComponent = this.setQuestionComponent.bind(this);\n    this.addAnswer = this.addAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuiz().then(json => this.setState({\n      questionList: json[0]\n    }));\n  }\n\n  async getQuiz() {\n    return await ServerConnection.getQuiz(this.props.quiz, this.props.jwtToken).then(response => response);\n  }\n\n  addAnswer(answer) {\n    let userAnswers = [...this.state.userAnswers];\n    userAnswers.push(answer);\n    this.setState({\n      userAnswers: userAnswers\n    });\n  }\n\n  showResult() {\n    return this.state.userAnswers.length < this.state.questionList.length;\n  }\n\n  getScore() {\n    let trueAnswers = [];\n    this.state.userAnswers.map(answer => answer === true ? trueAnswers.push(answer) : null);\n    return trueAnswers.length * 100 / this.state.questionList.length;\n  }\n\n  async updatePercentage() {\n    const percentage = this.getScore();\n    const response = await ServerConnection.updatePercentage(this.props.quiz, percentage, this.props.user).then(response => response);\n    alert(response);\n  }\n\n  setQuestionComponent() {\n    let question = this.state.questionList[this.state.userAnswers.length];\n    return /*#__PURE__*/_jsxDEV(DoQuestion, {\n      question: question,\n      questionNumber: this.state.userAnswers.length + 1,\n      addAnswer: this.addAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    if (this.state.questionList.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading Quiz ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    } else {\n      let quizShow;\n\n      if (this.showResult()) {\n        quizShow = this.setQuestionComponent();\n      } else {\n        quizShow = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-text\",\n            children: [\"You scored \", this.getScore(), \" out of 100!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-button\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              size: \"lg\",\n              type: \"submit\",\n              onClick: this.updatePercentage.bind(this),\n              children: \"Submit Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"home-button\",\n            children: /*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: quizShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default DoQuiz;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Do Quiz/DoQuiz.js"],"names":["React","ServerConnection","DoQuestion","Button","HomeButton","DoQuiz","Component","constructor","props","state","questionList","userAnswers","getQuiz","bind","getScore","setQuestionComponent","addAnswer","componentDidMount","then","json","setState","quiz","jwtToken","response","answer","push","showResult","length","trueAnswers","map","updatePercentage","percentage","user","alert","question","render","quizShow"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\nimport DoQuestion from \"./DoQuestion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport HomeButton from \"../Sign Up/returnToHomePage\";\r\nimport './DoQuiz.css'\r\n\r\nclass DoQuiz extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questionList: [],\r\n            userAnswers: []\r\n        }\r\n        this.getQuiz = this.getQuiz.bind(this);\r\n        this.getScore = this.getScore.bind(this);\r\n        this.setQuestionComponent = this.setQuestionComponent.bind(this);\r\n        this.addAnswer = this.addAnswer.bind(this);\r\n\r\n    }\r\n\r\n     componentDidMount() {\r\n        this.getQuiz().then(json => this.setState({questionList: json[0]}))\r\n    }\r\n\r\n\r\n    async getQuiz() {\r\n        return await ServerConnection.getQuiz(this.props.quiz, this.props.jwtToken).then(response => response);\r\n    }\r\n\r\n    addAnswer(answer) {\r\n        let userAnswers = [...this.state.userAnswers];\r\n        userAnswers.push(answer)\r\n        this.setState({userAnswers: userAnswers});\r\n    }\r\n\r\n    showResult() {\r\n        return this.state.userAnswers.length < this.state.questionList.length;\r\n    }\r\n\r\n    getScore() {\r\n        let trueAnswers = []\r\n        this.state.userAnswers.map(answer => (answer === true ? trueAnswers.push(answer): null))\r\n        \r\n        return trueAnswers.length * 100 / this.state.questionList.length;\r\n    }\r\n\r\n    async updatePercentage() {\r\n        const percentage = this.getScore();\r\n        const response =  await ServerConnection.updatePercentage(this.props.quiz, percentage, this.props.user).then(response => response)\r\n        alert(response)\r\n    }\r\n\r\n    setQuestionComponent() {\r\n        let question = this.state.questionList[this.state.userAnswers.length];\r\n        return <DoQuestion question={question} questionNumber={this.state.userAnswers.length + 1} addAnswer={this.addAnswer}/>\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.questionList.length === 0) {\r\n            return (\r\n                <span>Loading Quiz ... </span>\r\n            )\r\n        } else {\r\n            let quizShow;\r\n            if (this.showResult()) {\r\n                quizShow = this.setQuestionComponent();\r\n            } else {\r\n                quizShow = (\r\n                    <div className=\"score-section\">\r\n                        <div className=\"score-text\">\r\n                            You scored {this.getScore()} out of 100!\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                        <Button block size=\"lg\" type=\"submit\"\r\n                                               onClick={this.updatePercentage.bind(this)}>Submit Quiz</Button>\r\n                    </div>\r\n                        <div className=\"home-button\">\r\n                            <HomeButton/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return (<div className=\"quiz\">\r\n                    {quizShow}\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default DoQuiz;"]},"metadata":{},"sourceType":"module"}