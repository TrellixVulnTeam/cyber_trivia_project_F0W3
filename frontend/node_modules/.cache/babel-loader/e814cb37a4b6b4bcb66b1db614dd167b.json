{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolermaster\\\\PycharmProjects\\\\Updated_trivia_project\\\\frontend\\\\src\\\\components\\\\Make Quiz\\\\BuildQuiz.js\";\nimport React from 'react';\nimport BuildQuestion from \"./buildQuestion\";\nimport QuizIntro from './QuizIntro';\nimport Button from \"react-bootstrap/Button\";\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BuildQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.user = this.props.user;\n    this.state = {\n      questionsObj: {},\n      quizName: '',\n      questionAmount: '',\n      counter: 1\n    };\n    this.addQuestionObj = this.addQuestionObj.bind(this);\n    this.checkQuizIntro = this.checkQuizIntro.bind(this);\n    this.checkQuestionAmount = this.checkQuestionAmount.bind(this);\n    this.setQuestionAmount = this.setQuestionAmount.bind(this);\n    this.setQuizName = this.setQuizName.bind(this);\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.wholeQuizObj = {};\n  }\n\n  addQuestionObj(questionObj) {\n    this.questionsObj[questionObj.keys()] = questionObj.values();\n    this.setState({\n      counter: this.counter++\n    });\n  }\n\n  checkQuizIntro() {\n    return this.state.quizName.length === 0 && this.state.questionAmount.length === 0;\n  }\n\n  setQuizName(quizName) {\n    this.setState({\n      quizName: quizName\n    });\n  }\n\n  setQuestionAmount(questionAmount) {\n    this.setState({\n      questionAmount: questionAmount\n    });\n  }\n\n  checkQuestionAmount() {\n    return this.state.questionAmount > this.state.questionsObj.length;\n  }\n\n  async sendQuizObj() {\n    const response = await ServerConnection.postQuiz(this.state.quizName, this.user, this.state.questionsObj).then(response => response);\n    alert(response);\n  }\n\n  incrementCounter() {\n    let counter = this.state.counter;\n    this.setState({\n      counter: counter++\n    });\n  }\n\n  render() {\n    let runQuizintro;\n\n    if (this.checkQuizIntro()) {\n      runQuizintro = /*#__PURE__*/_jsxDEV(QuizIntro, {\n        setQuizName: this.setQuizName,\n        setQuestionAmount: this.setQuestionAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }, this);\n    } else {\n      runQuizintro = null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [runQuizintro, this.checkQuestionAmount && !this.checkQuizIntro ? /*#__PURE__*/_jsxDEV(BuildQuestion, {\n        addQuestionObj: this.addQuestionObj,\n        questionNumber: this.state.counter,\n        incrementCounter: this.incrementCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 65\n      }, this) : null, !this.checkQuestionAmount ? /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        onClick: this.sendQuizObj,\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 42\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default BuildQuiz;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Make Quiz/BuildQuiz.js"],"names":["React","BuildQuestion","QuizIntro","Button","ServerConnection","BuildQuiz","Component","constructor","props","user","state","questionsObj","quizName","questionAmount","counter","addQuestionObj","bind","checkQuizIntro","checkQuestionAmount","setQuestionAmount","setQuizName","incrementCounter","wholeQuizObj","questionObj","keys","values","setState","length","sendQuizObj","response","postQuiz","then","alert","render","runQuizintro"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BuildQuestion from \"./buildQuestion\";\r\nimport QuizIntro from './QuizIntro';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\n\r\n\r\nclass BuildQuiz extends React.Component {\r\n    constructor(props){\r\n        super (props);\r\n        this.user = this.props.user;\r\n        this.state = {\r\n            questionsObj: {},\r\n            quizName: '',\r\n            questionAmount: '',\r\n            counter: 1}\r\n        this.addQuestionObj = this.addQuestionObj.bind(this);\r\n        this.checkQuizIntro = this.checkQuizIntro.bind(this);\r\n        this.checkQuestionAmount = this.checkQuestionAmount.bind(this);\r\n        this.setQuestionAmount = this.setQuestionAmount.bind(this);\r\n        this.setQuizName = this.setQuizName.bind(this);\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n\r\n        this.wholeQuizObj={}\r\n    }\r\n\r\n    addQuestionObj(questionObj) {\r\n        this.questionsObj[questionObj.keys()] = questionObj.values();\r\n        this.setState({counter: this.counter++});\r\n    }\r\n\r\n    checkQuizIntro() {\r\n        return (this.state.quizName.length === 0 && this.state.questionAmount.length === 0);\r\n\r\n    }\r\n\r\n    setQuizName(quizName) {\r\n        this.setState({quizName: quizName})\r\n\r\n    }\r\n\r\n    setQuestionAmount(questionAmount) {\r\n        this.setState({questionAmount: questionAmount})\r\n    }\r\n\r\n\r\n    checkQuestionAmount() {\r\n        return this.state.questionAmount > this.state.questionsObj.length;\r\n    }\r\n\r\n    async sendQuizObj() {\r\n        const response = await ServerConnection.postQuiz(this.state.quizName, this.user, this.state.questionsObj).then(response => response)\r\n        alert(response)\r\n\r\n    }\r\n\r\n    incrementCounter() {\r\n        let counter = this.state.counter;\r\n        this.setState({counter: counter++})\r\n    }\r\n\r\n    render() {\r\n        let runQuizintro;\r\n        if (this.checkQuizIntro()) {\r\n            runQuizintro = <QuizIntro setQuizName={this.setQuizName} setQuestionAmount={this.setQuestionAmount}/>\r\n        } else {\r\n            runQuizintro = null;\r\n        }\r\n        return(<div className=\"Quiz\">\r\n            {runQuizintro}\r\n            {this.checkQuestionAmount && !this.checkQuizIntro ? <BuildQuestion\r\n                addQuestionObj={this.addQuestionObj}\r\n                questionNumber={this.state.counter}\r\n                incrementCounter={this.incrementCounter}/> : null}\r\n            {!this.checkQuestionAmount ? <Button block size=\"lg\" type=\"submit\" onClick={this.sendQuizObj}>Submit Quiz</Button>: null}\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default BuildQuiz;"]},"metadata":{},"sourceType":"module"}