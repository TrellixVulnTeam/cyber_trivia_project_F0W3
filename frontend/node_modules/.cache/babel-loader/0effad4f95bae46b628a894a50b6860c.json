{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var fetch=require('node-fetch');//\nvar ServerConnection={url:\"https://trivia-game-cyber.herokuapp.com/\",getQuiz:function getQuiz(quiz,jwt_token){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,jsonResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{headers:{\"content-type\":\"application/json\",\"connection\":\"keep-alive\"}});case 3:response=_context.sent;if(!response.ok){_context.next=9;break;}_context.next=7;return response.json();case 7:jsonResponse=_context.sent;return _context.abrupt(\"return\",Object.values(jsonResponse));case 9:throw new Error(\"Request failed!\");case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);document.write(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}))();},postQuiz:function postQuiz(quiz,user,questionObj){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data,headers,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;data=JSON.stringify({\"user\":user,\"question_dict\":questionObj});headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context2.next=5;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"POST\",headers:headers,body:data});case 5:response=_context2.sent;if(!response.ok){_context2.next=11;break;}_context2.next=9;return response.json();case 9:jsonResponse=_context2.sent;return _context2.abrupt(\"return\",jsonResponse['message']);case 11:throw new Error('Request failed!');case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);document.write(_context2.t0);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14]]);}))();},deleteQuiz:function deleteQuiz(quiz){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var headers,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context3.next=4;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"DELETE\",headers:headers});case 4:response=_context3.sent;if(!response.ok){_context3.next=10;break;}_context3.next=8;return response.json();case 8:jsonResponse=_context3.sent;return _context3.abrupt(\"return\",jsonResponse['message']);case 10:throw new Error('Request failed!');case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);document.write(_context3.t0);case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[0,13]]);}))();},putQuiz:function putQuiz(quiz,addOrRemove,question,user){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var headers,data,response,jsonResponse,_data,_response,_jsonResponse;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};if(!(addOrRemove===\"add_question\")){_context4.next=24;break;}data=JSON.stringify({add_or_remove:\"True\",\"user\":user,\"question_added\":question});_context4.next=6;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"PUT\",headers:headers,body:data});case 6:response=_context4.sent;if(!response.ok){_context4.next=14;break;}_context4.next=10;return response.json();case 10:jsonResponse=_context4.sent;return _context4.abrupt(\"return\",jsonResponse['message']);case 14:if(!(addOrRemove===\"remove_question\")){_context4.next=24;break;}_data=JSON.stringify({add_or_remove:\"True\",\"user\":user,\"question_removed\":question});_context4.next=18;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"PUT\",headers:headers,body:_data});case 18:_response=_context4.sent;if(!_response.ok){_context4.next=24;break;}_context4.next=22;return _response.json();case 22:_jsonResponse=_context4.sent;return _context4.abrupt(\"return\",_jsonResponse['message']);case 24:throw new Error('Request failed!');case 27:_context4.prev=27;_context4.t0=_context4[\"catch\"](0);document.write(_context4.t0);case 30:case\"end\":return _context4.stop();}}},_callee4,null,[[0,27]]);}))();},getQuizzes:function getQuizzes(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var headers,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context5.next=4;return fetch(\"\".concat(ServerConnection.url,\"quizzes\"),{headers:headers});case 4:response=_context5.sent;if(!response.ok){_context5.next=10;break;}_context5.next=8;return response.json();case 8:jsonResponse=_context5.sent;return _context5.abrupt(\"return\",jsonResponse['quizzes']);case 10:throw new Error('Request failed!');case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](0);document.write(_context5.t0);case 16:case\"end\":return _context5.stop();}}},_callee5,null,[[0,13]]);}))();},register:function register(user,password){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var headers,data,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};data=JSON.stringify({\"password\":password});_context6.next=5;return fetch(\"\".concat(ServerConnection.url,\"user/\").concat(user),{method:\"POST\",headers:headers,body:data});case 5:response=_context6.sent;if(!response.ok){_context6.next=11;break;}_context6.next=9;return response.json();case 9:jsonResponse=_context6.sent;return _context6.abrupt(\"return\",jsonResponse['message']);case 11:throw new Error(\"Request failed!\");case 14:_context6.prev=14;_context6.t0=_context6[\"catch\"](0);document.write(_context6.t0);case 17:case\"end\":return _context6.stop();}}},_callee6,null,[[0,14]]);}))();},auth:function auth(user,password){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var headers,data,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};data=JSON.stringify({\"username\":user,\"password\":password});_context7.next=5;return fetch(\"\".concat(ServerConnection.url,\"auth\"),{method:\"POST\",headers:headers,body:data});case 5:response=_context7.sent;if(!response.ok){_context7.next=11;break;}_context7.next=9;return response.json();case 9:jsonResponse=_context7.sent;return _context7.abrupt(\"return\",jsonResponse['access_token']);case 11:throw new Error(\"Request failed!\");case 14:_context7.prev=14;_context7.t0=_context7[\"catch\"](0);document.write(_context7.t0);case 17:case\"end\":return _context7.stop();}}},_callee7,null,[[0,14]]);}))();},updatePercentage:function updatePercentage(quizName,percentage,user){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var headers,data,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};data=JSON.stringify({\"percentage\":percentage,\"quiz_name\":quizName});_context8.next=5;return fetch(\"\".concat(ServerConnection.url,\"user/\").concat(user),{method:\"PUT\",body:data,headers:headers});case 5:response=_context8.sent;if(!response.ok){_context8.next=11;break;}_context8.next=9;return response.json();case 9:jsonResponse=_context8.sent;return _context8.abrupt(\"return\",jsonResponse['message']);case 11:throw new Error(\"Request failed!\");case 14:_context8.prev=14;_context8.t0=_context8[\"catch\"](0);document.write(_context8.t0);case 17:case\"end\":return _context8.stop();}}},_callee8,null,[[0,14]]);}))();},getStats:function getStats(username){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var headers,response;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context9.next=4;return fetch(\"\".concat(ServerConnection.url,\"user/\").concat(username),{headers:headers});case 4:response=_context9.sent;if(!response.ok){_context9.next=9;break;}_context9.next=8;return response.json();case 8:return _context9.abrupt(\"return\",_context9.sent);case 9:throw new Error(\"Request failed!\");case 12:_context9.prev=12;_context9.t0=_context9[\"catch\"](0);document.write(_context9.t0);case 15:case\"end\":return _context9.stop();}}},_callee9,null,[[0,12]]);}))();}};export default ServerConnection;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Main Page/Api Connection/serverConnection.js"],"names":["fetch","require","ServerConnection","url","getQuiz","quiz","jwt_token","headers","response","ok","json","jsonResponse","Object","values","Error","document","write","postQuiz","user","questionObj","data","JSON","stringify","method","body","deleteQuiz","putQuiz","addOrRemove","question","add_or_remove","getQuizzes","register","password","auth","updatePercentage","quizName","percentage","getStats","username"],"mappings":"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","sourcesContent":["const fetch = require('node-fetch')\r\n\r\n\r\n\r\n//\r\nconst ServerConnection = {\r\n    url: \"https://trivia-game-cyber.herokuapp.com/\",\r\n\r\n\r\n\r\n    async getQuiz(quiz, jwt_token) {\r\n        try {\r\n            const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {headers: {\"content-type\": \"application/json\", \"connection\": \"keep-alive\", }});\r\n            if (response.ok) {\r\n                const jsonResponse =  await response.json();\r\n                return Object.values(jsonResponse);\r\n            }\r\n            throw new Error(\"Request failed!\");\r\n        }\r\n        catch(error) {\r\n            document.write(error);\r\n        }\r\n    },\r\n\r\n    async postQuiz(quiz, user, questionObj) {\r\n        try {\r\n            const data = JSON.stringify({\"user\": user, \"question_dict\": questionObj})\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"}\r\n            const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method:\"POST\", headers: headers,body:data})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['message'];\r\n            }\r\n            throw new Error('Request failed!');\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n    async deleteQuiz(quiz) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method: \"DELETE\", headers: headers})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['message'];\r\n            }\r\n            throw new Error('Request failed!');\r\n        }\r\n        catch (error) {\r\n            document.write(error);\r\n        }\r\n\r\n    },\r\n\r\n    async putQuiz(quiz, addOrRemove, question, user) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            if (addOrRemove === \"add_question\") {\r\n                const data = JSON.stringify({add_or_remove: \"True\", \"user\": user, \"question_added\": question})\r\n                const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method: \"PUT\", headers: headers, body: data})\r\n                if (response.ok) {\r\n                    const jsonResponse = await response.json();\r\n                    return jsonResponse['message'];\r\n\r\n\r\n            }\r\n            else if (addOrRemove === \"remove_question\") {\r\n                    const data = JSON.stringify({add_or_remove: \"True\", \"user\": user, \"question_removed\": question});\r\n                    const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method:\"PUT\", headers: headers, body: data});\r\n                    if (response.ok) {\r\n                        const jsonResponse = await response.json();\r\n                        return jsonResponse['message'];\r\n                    }\r\n            }\r\n        }\r\n            throw new Error('Request failed!');\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n     async getQuizzes() {\r\n        try {\r\n             const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n             const response = await fetch(`${ServerConnection.url}quizzes`, {headers: headers});\r\n             if (response.ok) {\r\n                 const jsonResponse = await response.json();\r\n                 return jsonResponse['quizzes'];\r\n             }\r\n             throw new Error('Request failed!');\r\n         }\r\n        catch (error) {\r\n            document.write(error)\r\n    }},\r\n\r\n     async register(user, password) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"}\r\n            const data = JSON.stringify({\"password\": password});\r\n            const response = await fetch(`${ServerConnection.url}user/${user}`, {method: \"POST\", headers: headers, body: data})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['message'];\r\n            }\r\n            throw new Error(\"Request failed!\")\r\n        }\r\n\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n\r\n    },\r\n\r\n    async auth(user, password) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const data = JSON.stringify({\"username\": user, \"password\": password});\r\n            const response = await fetch(`${ServerConnection.url}auth`, {method: \"POST\", headers: headers, body: data})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['access_token'];\r\n            }\r\n            throw new Error(\"Request failed!\");\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n    async updatePercentage(quizName, percentage, user) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const data = JSON.stringify({\"percentage\": percentage, \"quiz_name\": quizName});\r\n            const response = await fetch(`${ServerConnection.url}user/${user}`, {method: \"PUT\", body: data, headers: headers})\r\n            if (response.ok) {\r\n                let jsonResponse = await response.json();\r\n                return jsonResponse['message'];\r\n            }\r\n            throw new Error(\"Request failed!\")\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n    async getStats(username) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const response = await fetch(`${ServerConnection.url}user/${username}`, {headers: headers});\r\n            if (response.ok) {\r\n                return await response.json();\r\n            }\r\n            throw new Error(\"Request failed!\");\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ServerConnection;"]},"metadata":{},"sourceType":"module"}