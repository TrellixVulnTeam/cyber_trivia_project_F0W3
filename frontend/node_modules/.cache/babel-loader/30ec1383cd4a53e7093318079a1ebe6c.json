{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var ServerConnection={url:\"https://trivia-game-cyber.herokuapp.com/\",getQuiz:function getQuiz(quiz,jwt_token){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{headers:{\"content-type\":\"application/json\",\"connection\":\"keep-alive\",\"Authorization\":\"JWT \"+jwt_token[1]}});case 3:response=_context.sent;if(!response.ok){_context.next=8;break;}_context.next=7;return response.json();case 7:return _context.abrupt(\"return\",_context.sent);case 8:throw new Error(\"Request failed!\");case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);document.write(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}))();},postQuiz:function postQuiz(quiz,user,questionObj){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data,headers,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;data=JSON.stringify({\"user\":user,\"question_dict\":questionObj});headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context2.next=5;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"POST\",headers:headers,body:data});case 5:response=_context2.sent;if(!response.ok){_context2.next=10;break;}_context2.next=9;return response.json();case 9:return _context2.abrupt(\"return\",_context2.sent);case 10:throw new Error('Request failed!');case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](0);document.write(_context2.t0);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[0,13]]);}))();},deleteQuiz:function deleteQuiz(quiz){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var headers,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context3.next=4;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"DELETE\",headers:headers});case 4:response=_context3.sent;if(!response.ok){_context3.next=10;break;}_context3.next=8;return response.json();case 8:jsonResponse=_context3.sent;return _context3.abrupt(\"return\",jsonResponse['message']);case 10:throw new Error('Request failed!');case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);document.write(_context3.t0);case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[0,13]]);}))();},putQuiz:function putQuiz(quiz,addOrRemove,question,user){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var headers,data,response,jsonResponse,_data,_response,_jsonResponse;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};if(!(addOrRemove===\"add_question\")){_context4.next=24;break;}data=JSON.stringify({add_or_remove:\"True\",\"user\":user,\"question_added\":question});_context4.next=6;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"PUT\",headers:headers,body:data});case 6:response=_context4.sent;if(!response.ok){_context4.next=14;break;}_context4.next=10;return response.json();case 10:jsonResponse=_context4.sent;return _context4.abrupt(\"return\",jsonResponse['message']);case 14:if(!(addOrRemove===\"remove_question\")){_context4.next=24;break;}_data=JSON.stringify({add_or_remove:\"True\",\"user\":user,\"question_removed\":question});_context4.next=18;return fetch(\"\".concat(ServerConnection.url,\"quiz/\").concat(quiz),{method:\"PUT\",headers:headers,body:_data});case 18:_response=_context4.sent;if(!_response.ok){_context4.next=24;break;}_context4.next=22;return _response.json();case 22:_jsonResponse=_context4.sent;return _context4.abrupt(\"return\",_jsonResponse['message']);case 24:throw new Error('Request failed!');case 27:_context4.prev=27;_context4.t0=_context4[\"catch\"](0);document.write(_context4.t0);case 30:case\"end\":return _context4.stop();}}},_callee4,null,[[0,27]]);}))();},getQuizzes:function getQuizzes(){var headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};axios.get(\"\".concat(this.url,\"quizzes\"),{headers:headers}).then(function(response){if(response.ok){return response.json();}}).then(function(jsonResponse){return jsonResponse['quizzes'];}).catch(function(error){document.write(error);});//     const response = await fetch(`${ServerConnection.url}quizzes`, { headers: headers});\n//     if (response.ok) {\n//         const jsonResponse = await response.json();\n//         return jsonResponse['quizzes'];\n//     }\n//     throw new Error('Request failed!');\n// }\n// catch (error) {\n//     document.write(error)\n// }\n},register:function register(user,password){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var headers,data,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};data=JSON.stringify({\"password\":password});_context5.next=5;return fetch(\"\".concat(ServerConnection.url,\"user/\").concat(user),{method:\"PUT\",headers:headers,body:data});case 5:response=_context5.sent;if(!response.ok){_context5.next=11;break;}_context5.next=9;return response.json();case 9:jsonResponse=_context5.sent;return _context5.abrupt(\"return\",jsonResponse['message']);case 11:throw new Error(\"Request failed!\");case 14:_context5.prev=14;_context5.t0=_context5[\"catch\"](0);document.write(_context5.t0);case 17:case\"end\":return _context5.stop();}}},_callee5,null,[[0,14]]);}))();},auth:function auth(user,password){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var headers,data,response,jsonResponse;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};data=JSON.stringify({\"username\":user,\"password\":password});_context6.next=5;return fetch(\"\".concat(ServerConnection.url,\"auth\"),{method:\"POST\",headers:headers,body:data});case 5:response=_context6.sent;if(!response.ok){_context6.next=11;break;}_context6.next=9;return response.json();case 9:jsonResponse=_context6.sent;return _context6.abrupt(\"return\",jsonResponse['access_token']);case 11:throw new Error(\"Request failed!\");case 14:_context6.prev=14;_context6.t0=_context6[\"catch\"](0);document.write(_context6.t0);case 17:case\"end\":return _context6.stop();}}},_callee6,null,[[0,14]]);}))();},updatePercentage:function updatePercentage(quizName,percentage,user){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var headers,data,response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};data=JSON.stringify({\"percentage\":percentage,\"quiz_name\":quizName});_context7.next=5;return fetch(\"\".concat(ServerConnection.url,\"user/\").concat(user),{method:\"PUT\",body:data,headers:headers});case 5:response=_context7.sent;if(!response.ok){_context7.next=10;break;}_context7.next=9;return response.json();case 9:return _context7.abrupt(\"return\",_context7.sent);case 10:throw new Error(\"Request failed!\");case 13:_context7.prev=13;_context7.t0=_context7[\"catch\"](0);document.write(_context7.t0);case 16:case\"end\":return _context7.stop();}}},_callee7,null,[[0,13]]);}))();},getStats:function getStats(username){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var headers,response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;headers={\"content-type\":\"application/json\",\"connection\":\"keep-alive\"};_context8.next=4;return fetch(\"\".concat(ServerConnection.url,\"user/\").concat(username),{headers:headers});case 4:response=_context8.sent;if(!response.ok){_context8.next=9;break;}_context8.next=8;return response.json();case 8:return _context8.abrupt(\"return\",_context8.sent);case 9:throw new Error(\"Request failed!\");case 12:_context8.prev=12;_context8.t0=_context8[\"catch\"](0);document.write(_context8.t0);case 15:case\"end\":return _context8.stop();}}},_callee8,null,[[0,12]]);}))();}};export default ServerConnection;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/Main Page/Api Connection/serverConnection.js"],"names":["axios","ServerConnection","url","getQuiz","quiz","jwt_token","fetch","headers","response","ok","json","Error","document","write","postQuiz","user","questionObj","data","JSON","stringify","method","body","deleteQuiz","jsonResponse","putQuiz","addOrRemove","question","add_or_remove","getQuizzes","get","then","catch","error","register","password","auth","updatePercentage","quizName","percentage","getStats","username"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst ServerConnection = {\r\n    url: \"https://trivia-game-cyber.herokuapp.com/\",\r\n\r\n\r\n\r\n    async getQuiz(quiz, jwt_token) {\r\n        try {\r\n            const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {headers: {\"content-type\": \"application/json\", \"connection\": \"keep-alive\", \"Authorization\": \"JWT \" + jwt_token[1]}});\r\n            if (response.ok) {\r\n                return await response.json();\r\n            }\r\n            throw new Error(\"Request failed!\");\r\n        }\r\n        catch(error) {\r\n            document.write(error);\r\n        }\r\n    },\r\n\r\n    async postQuiz(quiz, user, questionObj) {\r\n        try {\r\n            const data = JSON.stringify({\"user\": user, \"question_dict\": questionObj})\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"}\r\n            const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method:\"POST\", headers: headers,body:data})\r\n            if (response.ok) {\r\n                return await response.json();\r\n            }\r\n            throw new Error('Request failed!');\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n    async deleteQuiz(quiz) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method: \"DELETE\", headers: headers})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['message'];\r\n            }\r\n            throw new Error('Request failed!');\r\n        }\r\n        catch (error) {\r\n            document.write(error);\r\n        }\r\n\r\n    },\r\n\r\n    async putQuiz(quiz, addOrRemove, question, user) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            if (addOrRemove === \"add_question\") {\r\n                const data = JSON.stringify({add_or_remove: \"True\", \"user\": user, \"question_added\": question})\r\n                const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method: \"PUT\", headers: headers, body: data})\r\n                if (response.ok) {\r\n                    const jsonResponse = await response.json();\r\n                    return jsonResponse['message'];\r\n\r\n\r\n            }\r\n            else if (addOrRemove === \"remove_question\") {\r\n                    const data = JSON.stringify({add_or_remove: \"True\", \"user\": user, \"question_removed\": question});\r\n                    const response = await fetch(`${ServerConnection.url}quiz/${quiz}`, {method:\"PUT\", headers: headers, body: data});\r\n                    if (response.ok) {\r\n                        const jsonResponse = await response.json();\r\n                        return jsonResponse['message'];\r\n                    }\r\n            }\r\n        }\r\n            throw new Error('Request failed!');\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n     getQuizzes() {\r\n         const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n\r\n         axios.get(`${this.url}quizzes`, {headers: headers})\r\n             .then(response => {\r\n                 if (response.ok) {\r\n                     return response.json();\r\n                 }\r\n             }).then(jsonResponse => {\r\n                 return jsonResponse['quizzes']\r\n         }).catch(error => {\r\n             document.write(error);\r\n         })\r\n        //     const response = await fetch(`${ServerConnection.url}quizzes`, { headers: headers});\r\n        //     if (response.ok) {\r\n        //         const jsonResponse = await response.json();\r\n        //         return jsonResponse['quizzes'];\r\n        //     }\r\n        //     throw new Error('Request failed!');\r\n        // }\r\n        // catch (error) {\r\n        //     document.write(error)\r\n        // }\r\n    },\r\n\r\n    async register(user, password) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"}\r\n            const data = JSON.stringify({\"password\": password});\r\n            const response = await fetch(`${ServerConnection.url}user/${user}`, {method: \"PUT\", headers: headers, body: data})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['message'];\r\n            }\r\n            throw new Error(\"Request failed!\")\r\n        }\r\n\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n\r\n    },\r\n\r\n    async auth(user, password) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const data = JSON.stringify({\"username\": user, \"password\": password});\r\n            const response = await fetch(`${ServerConnection.url}auth`, {method: \"POST\", headers: headers, body: data})\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                return jsonResponse['access_token'];\r\n            }\r\n            throw new Error(\"Request failed!\");\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n    async updatePercentage(quizName, percentage, user) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const data = JSON.stringify({\"percentage\": percentage, \"quiz_name\": quizName});\r\n            const response = await fetch(`${ServerConnection.url}user/${user}`, {method: \"PUT\", body: data, headers: headers})\r\n            if (response.ok) {\r\n                return await response.json();\r\n            }\r\n            throw new Error(\"Request failed!\")\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    },\r\n\r\n    async getStats(username) {\r\n        try {\r\n            const headers = {\"content-type\": \"application/json\", \"connection\": \"keep-alive\"};\r\n            const response = await fetch(`${ServerConnection.url}user/${username}`, {headers: headers});\r\n            if (response.ok) {\r\n                return await response.json();\r\n            }\r\n            throw new Error(\"Request failed!\");\r\n        }\r\n        catch (error) {\r\n            document.write(error)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ServerConnection;"]},"metadata":{},"sourceType":"module"}