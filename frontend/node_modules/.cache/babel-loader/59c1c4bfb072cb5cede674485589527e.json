{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolermaster\\\\PycharmProjects\\\\Updated_trivia_project\\\\frontend\\\\src\\\\components\\\\Stats\\\\Stats.js\";\nimport React from 'react';\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\nimport QuizScore from \"./QuizScore\";\nimport HomeButton from \"../Sign Up/returnToHomePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      averageScore: '',\n      quizzes: [],\n      quizScores: []\n    };\n    this.getStats = this.getStats.bind(this);\n  }\n\n  componentDidMount() {\n    let stats = this.getStats();\n    this.setState({\n      averageScore: stats['average']\n    });\n    this.setState({\n      quizzes: stats['quizzes']\n    });\n    this.setState({\n      quizScores: stats['quiz_scores']\n    });\n  }\n\n  async getStats() {\n    return await ServerConnection.getStats(this.props.user).then(response => response);\n  }\n\n  render() {\n    let quizScores = this.state.quizzes.map((quiz, index) => /*#__PURE__*/_jsxDEV(QuizScore, {\n      quizName: quiz,\n      quizScore: this.state.quizScores[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 66\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-username\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-average-score\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Average Score: \", this.state.averageScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), quizScores, /*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Stats;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Stats/Stats.js"],"names":["React","ServerConnection","QuizScore","HomeButton","Stats","Component","constructor","props","state","averageScore","quizzes","quizScores","getStats","bind","componentDidMount","stats","setState","user","then","response","render","map","quiz","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKH,QAAL,EAAZ;AACA,SAAKI,QAAL,CAAc;AAACP,MAAAA,YAAY,EAAEM,KAAK,CAAC,SAAD;AAApB,KAAd;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAEK,KAAK,CAAC,SAAD;AAAf,KAAd;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA,UAAU,EAAEI,KAAK,CAAC,aAAD;AAAlB,KAAd;AACH;;AAEa,QAARH,QAAQ,GAAG;AACb,WAAO,MAAMX,gBAAgB,CAACW,QAAjB,CAA0B,KAAKL,KAAL,CAAWU,IAArC,EAA2CC,IAA3C,CAAgDC,QAAQ,IAAIA,QAA5D,CAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIT,UAAU,GAAG,KAAKH,KAAL,CAAWE,OAAX,CAAmBW,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,IAArB;AAA2B,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWG,UAAX,CAAsBY,KAAtB;AAAtC;AAAA;AAAA;AAAA;AAAA,YAAxC,CAAjB;AACA,wBAAQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACJ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACA;AAAA,oBAAK,KAAKhB,KAAL,CAAWU;AAAhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADI,eAIJ;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAA,wCAAoB,KAAKT,KAAL,CAAWC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJI,EAOHE,UAPG,eAQJ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cARI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAWH;;AAnC+B;;AAsCpC,eAAeP,KAAf","sourcesContent":["import React from 'react';\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\nimport QuizScore from \"./QuizScore\";\r\nimport HomeButton from \"../Sign Up/returnToHomePage\";\r\n\r\nclass Stats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            averageScore: '',\r\n            quizzes: [],\r\n            quizScores: []\r\n        }\r\n        this.getStats = this.getStats.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let stats = this.getStats();\r\n        this.setState({averageScore: stats['average']})\r\n        this.setState({quizzes: stats['quizzes']})\r\n        this.setState({quizScores: stats['quiz_scores']})\r\n    }\r\n\r\n    async getStats() {\r\n        return await ServerConnection.getStats(this.props.user).then(response => response);\r\n    }\r\n\r\n    render() {\r\n        let quizScores = this.state.quizzes.map((quiz, index) => <QuizScore quizName={quiz} quizScore={this.state.quizScores[index]}/>)\r\n        return (<div className=\"stats\">\r\n            <div className=\"stats-username\">\r\n            <h2>{this.props.user}</h2>\r\n            </div>\r\n            <div className=\"stats-average-score\">\r\n                <h4>Average Score: {this.state.averageScore}</h4>\r\n            </div>\r\n            {quizScores}\r\n            <HomeButton/>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Stats;"]},"metadata":{},"sourceType":"module"}