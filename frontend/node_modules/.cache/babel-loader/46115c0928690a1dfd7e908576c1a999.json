{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coolermaster\\\\PycharmProjects\\\\Updated_trivia_project\\\\frontend\\\\src\\\\components\\\\Do Quiz\\\\DoQuiz.js\";\nimport React from 'react';\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\nimport DoQuestion from \"./DoQuestion\";\nimport Button from \"react-bootstrap/Button\";\nimport HomeButton from \"../Sign Up/returnToHomePage\";\nimport './DoQuiz.css';\nimport ToStatsUpdatedEndPage from \"./toStatsUpdatedEndpoint\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DoQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionList: [],\n      userAnswers: []\n    };\n    this.getQuiz = this.getQuiz.bind(this);\n    this.getScore = this.getScore.bind(this);\n    this.setQuestionComponent = this.setQuestionComponent.bind(this);\n    this.addAnswer = this.addAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuiz().then(json => this.setState({\n      questionList: json[0]\n    }));\n  }\n\n  async getQuiz() {\n    return await ServerConnection.getQuiz(this.props.quiz, this.props.jwtToken).then(response => response);\n  }\n\n  addAnswer(answer) {\n    let userAnswers = [...this.state.userAnswers];\n    userAnswers.push(answer);\n    this.setState({\n      userAnswers: userAnswers\n    });\n  }\n\n  showResult() {\n    return this.state.userAnswers.length < this.state.questionList.length;\n  }\n\n  getScore() {\n    let trueAnswers = [];\n    this.state.userAnswers.map(answer => answer === true ? trueAnswers.push(answer) : null);\n    return Math.floor(trueAnswers.length * 100 / this.state.questionList.length);\n  }\n\n  async updatePercentage() {\n    const percentage = this.getScore();\n    const response = await ServerConnection.updatePercentage(this.props.quiz, percentage, this.props.user).then(response => response);\n    alert(response);\n  }\n\n  setQuestionComponent() {\n    let question = this.state.questionList[this.state.userAnswers.length];\n    return /*#__PURE__*/_jsxDEV(DoQuestion, {\n      question: question,\n      questionNumber: this.state.userAnswers.length + 1,\n      addAnswer: this.addAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    if (this.state.questionList.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading Quiz ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } else {\n      let quizShow;\n\n      if (this.showResult()) {\n        quizShow = this.setQuestionComponent();\n      } else {\n        quizShow = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-text\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"You scored \", this.getScore(), \" out of 100!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-button\",\n            children: /*#__PURE__*/_jsxDEV(ToStatsUpdatedEndPage, {\n              user: this.props.user,\n              quiz: this.props.quiz,\n              userAnswers: this.state.userAnswers,\n              questionList: this.state.questionList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: quizShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default DoQuiz;","map":{"version":3,"sources":["C:/Users/coolermaster/PycharmProjects/Updated_trivia_project/frontend/src/components/Do Quiz/DoQuiz.js"],"names":["React","ServerConnection","DoQuestion","Button","HomeButton","ToStatsUpdatedEndPage","DoQuiz","Component","constructor","props","state","questionList","userAnswers","getQuiz","bind","getScore","setQuestionComponent","addAnswer","componentDidMount","then","json","setState","quiz","jwtToken","response","answer","push","showResult","length","trueAnswers","map","Math","floor","updatePercentage","percentage","user","alert","question","render","quizShow"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ServerConnection from \"../Main Page/Api Connection/serverConnection\";\r\nimport DoQuestion from \"./DoQuestion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport HomeButton from \"../Sign Up/returnToHomePage\";\r\nimport './DoQuiz.css'\r\nimport ToStatsUpdatedEndPage from \"./toStatsUpdatedEndpoint\";\r\n\r\nclass DoQuiz extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questionList: [],\r\n            userAnswers: []\r\n        }\r\n        this.getQuiz = this.getQuiz.bind(this);\r\n        this.getScore = this.getScore.bind(this);\r\n        this.setQuestionComponent = this.setQuestionComponent.bind(this);\r\n        this.addAnswer = this.addAnswer.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuiz().then(json => this.setState({questionList: json[0]}))\r\n    }\r\n\r\n\r\n    async getQuiz() {\r\n        return await ServerConnection.getQuiz(this.props.quiz, this.props.jwtToken).then(response => response);\r\n    }\r\n\r\n    addAnswer(answer) {\r\n        let userAnswers = [...this.state.userAnswers];\r\n        userAnswers.push(answer)\r\n        this.setState({userAnswers: userAnswers});\r\n    }\r\n\r\n    showResult() {\r\n        return this.state.userAnswers.length < this.state.questionList.length;\r\n    }\r\n\r\n    getScore() {\r\n        let trueAnswers = []\r\n        this.state.userAnswers.map(answer => (answer === true ? trueAnswers.push(answer) : null))\r\n\r\n        return Math.floor(trueAnswers.length * 100 / this.state.questionList.length);\r\n    }\r\n\r\n    async updatePercentage() {\r\n        const percentage = this.getScore();\r\n        const response = await ServerConnection.updatePercentage(this.props.quiz, percentage, this.props.user).then(response => response)\r\n        alert(response)\r\n    }\r\n\r\n    setQuestionComponent() {\r\n        let question = this.state.questionList[this.state.userAnswers.length];\r\n        return <DoQuestion question={question} questionNumber={this.state.userAnswers.length + 1}\r\n                           addAnswer={this.addAnswer}/>\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.questionList.length === 0) {\r\n            return (\r\n                <span>Loading Quiz ... </span>\r\n            )\r\n        } else {\r\n            let quizShow;\r\n            if (this.showResult()) {\r\n                quizShow = this.setQuestionComponent();\r\n            } else {\r\n                quizShow = (\r\n                    <div className=\"container\">\r\n                        <div className=\"score-text\">\r\n                            <h3>You scored {this.getScore()} out of 100!</h3>\r\n                        </div>\r\n                        <div className=\"submit-button\">\r\n                            <ToStatsUpdatedEndPage user={this.props.user} quiz={this.props.quiz}\r\n                                                   userAnswers={this.state.userAnswers}\r\n                                                   questionList={this.state.questionList}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return (<div className=\"quiz\">\r\n                {quizShow}\r\n            </div>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default DoQuiz;"]},"metadata":{},"sourceType":"module"}